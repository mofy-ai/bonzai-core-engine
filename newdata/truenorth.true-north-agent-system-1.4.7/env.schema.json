{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "TrueNorth Environment Configuration Schema",
  "description": "Schema for validating environment variables in TrueNorth Agent System",
  "type": "object",
  "properties": {
    "NODE_ENV": {
      "type": "string",
      "enum": ["development", "staging", "production", "test"],
      "description": "Environment mode"
    },
    "LOG_LEVEL": {
      "type": "string",
      "enum": ["debug", "info", "warn", "error"],
      "default": "info",
      "description": "Logging level"
    },
    "PORT": {
      "type": "string",
      "pattern": "^[0-9]{1,5}$",
      "description": "Application port (1-65535)"
    },
    "WEBSOCKET_PORT": {
      "type": "string",
      "pattern": "^[0-9]{1,5}$",
      "description": "WebSocket port (1-65535)"
    },
    "SECRET_KEY": {
      "type": "string",
      "minLength": 32,
      "description": "Secret key for encryption (minimum 32 characters)"
    },
    "JWT_SECRET": {
      "type": "string",
      "minLength": 32,
      "description": "JWT secret for token signing (minimum 32 characters)"
    },
    "CLAUDE_API_KEY": {
      "type": "string",
      "pattern": "^sk-ant-[a-zA-Z0-9\\-_]+$",
      "description": "Claude API key (must start with sk-ant-)"
    },
    "CLAUDE_COMMAND": {
      "type": "string",
      "default": "claude",
      "description": "Claude CLI command path"
    },
    "DATABASE_URL": {
      "type": "string",
      "pattern": "^postgresql://[^\\s]+$",
      "description": "PostgreSQL connection URL"
    },
    "DB_HOST": {
      "type": "string",
      "description": "Database host"
    },
    "DB_PORT": {
      "type": "string",
      "pattern": "^[0-9]{1,5}$",
      "default": "5432",
      "description": "Database port"
    },
    "DB_NAME": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9_]+$",
      "description": "Database name"
    },
    "DB_USERNAME": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9_]+$",
      "description": "Database username"
    },
    "DB_PASSWORD": {
      "type": "string",
      "minLength": 8,
      "description": "Database password (minimum 8 characters)"
    },
    "REDIS_HOST": {
      "type": "string",
      "default": "localhost",
      "description": "Redis host"
    },
    "REDIS_PORT": {
      "type": "string",
      "pattern": "^[0-9]{1,5}$",
      "default": "6379",
      "description": "Redis port"
    },
    "REDIS_PASSWORD": {
      "type": "string",
      "description": "Redis password (optional)"
    },
    "MAX_PARALLEL_AGENTS": {
      "type": "string",
      "pattern": "^[1-9][0-9]*$",
      "description": "Maximum parallel agents (positive integer)"
    },
    "AGENT_TIMEOUT": {
      "type": "string",
      "pattern": "^[1-9][0-9]*$",
      "description": "Agent timeout in milliseconds"
    },
    "AGENT_RETRY_ATTEMPTS": {
      "type": "string",
      "pattern": "^[0-9]+$",
      "description": "Agent retry attempts"
    },
    "AWS_REGION": {
      "type": "string",
      "pattern": "^[a-z]{2}-[a-z]+-[0-9]$",
      "description": "AWS region (e.g., us-west-2)"
    },
    "AWS_ACCESS_KEY_ID": {
      "type": "string",
      "pattern": "^[A-Z0-9]{20}$",
      "description": "AWS access key ID"
    },
    "AWS_SECRET_ACCESS_KEY": {
      "type": "string",
      "pattern": "^[A-Za-z0-9/+=]{40}$",
      "description": "AWS secret access key"
    },
    "GITHUB_TOKEN": {
      "type": "string",
      "pattern": "^(ghp_[a-zA-Z0-9]{36}|github_pat_[a-zA-Z0-9_]{82})$",
      "description": "GitHub personal access token"
    },
    "NOTIFICATION_EMAIL": {
      "type": "string",
      "format": "email",
      "description": "Notification email address"
    },
    "SLACK_WEBHOOK_URL": {
      "type": "string",
      "pattern": "^https://hooks\\.slack\\.com/services/[A-Z0-9/]+$",
      "description": "Slack webhook URL"
    },
    "METRICS_ENABLED": {
      "type": "string",
      "enum": ["true", "false"],
      "default": "true",
      "description": "Enable metrics collection"
    },
    "HEALTH_CHECK_INTERVAL": {
      "type": "string",
      "pattern": "^[1-9][0-9]*$",
      "description": "Health check interval in milliseconds"
    },
    "SSL_ENABLED": {
      "type": "string",
      "enum": ["true", "false"],
      "default": "false",
      "description": "Enable SSL/TLS"
    },
    "SSL_CERT_PATH": {
      "type": "string",
      "description": "SSL certificate file path"
    },
    "SSL_KEY_PATH": {
      "type": "string",
      "description": "SSL private key file path"
    },
    "RATE_LIMIT_ENABLED": {
      "type": "string",
      "enum": ["true", "false"],
      "default": "true",
      "description": "Enable rate limiting"
    },
    "RATE_LIMIT_WINDOW": {
      "type": "string",
      "pattern": "^[1-9][0-9]*$",
      "description": "Rate limit window in milliseconds"
    },
    "RATE_LIMIT_MAX_REQUESTS": {
      "type": "string",
      "pattern": "^[1-9][0-9]*$",
      "description": "Maximum requests per window"
    },
    "SENTRY_DSN": {
      "type": "string",
      "pattern": "^https://[a-f0-9]+@[a-f0-9]+\\.ingest\\.sentry\\.io/[0-9]+$",
      "description": "Sentry DSN for error tracking"
    },
    "AUDIT_LOGGING": {
      "type": "string",
      "enum": ["true", "false"],
      "default": "true",
      "description": "Enable audit logging"
    },
    "ENCRYPTION_AT_REST": {
      "type": "string",
      "enum": ["true", "false"],
      "default": "true",
      "description": "Enable encryption at rest"
    },
    "ENCRYPTION_IN_TRANSIT": {
      "type": "string",
      "enum": ["true", "false"],
      "default": "true",
      "description": "Enable encryption in transit"
    }
  },
  "required": [
    "NODE_ENV",
    "SECRET_KEY",
    "JWT_SECRET"
  ],
  "conditionalRequired": {
    "if": {
      "properties": {
        "NODE_ENV": {
          "const": "production"
        }
      }
    },
    "then": {
      "required": [
        "CLAUDE_API_KEY",
        "DATABASE_URL",
        "DB_PASSWORD"
      ]
    }
  },
  "additionalProperties": true
}